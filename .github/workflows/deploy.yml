# This is a basic workflow to help you get started with Actions

name: Deploy to AWS

# Controls when the action will run.
on:
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: Upload to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push images to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DATABASE_URL: ${{ secrets.AWS_DATABASE_URL }}
        run: |
          docker-compose -f docker-compose-build.yml build
          docker-compose -f docker-compose-build.yml push

      - name: Update EC2 Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY_PRIVATE }}
          passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}
          # We relogin to ensure that our credentials are valid
          script: |
            $( aws ecr get-login --no-include-email --region us-east-1 )
            cd kahoot-gen
            docker-compose down
            docker-compose pull
            docker-compose up -d
            yes | docker image prune